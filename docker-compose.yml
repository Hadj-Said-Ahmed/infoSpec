version: "3.7"

services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 22181:2181
#    volumes:
#      - ./pub-technology/zookeeper/data:/data
#      - ./pub-technology/zookeeper/datalog:/datalog
#  kafka-server-1:
#    image: 'bitnami/kafka:latest'
#    depends_on:
#      - zookeeper
#    ports:
#      - 29092:29092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server-1:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    volumes:
#      - ./pub-technology/kafka1/data:/var/lib/kafka/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  mongodb:
    image: mongo:6.0.1
    container_name: "mongodb"
    ports:
      - 27070:27017
    volumes:
      - db:/var/lib/greentechmongo
  postgreSQL:
    image: postgres:14.1-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db:/var/lib/greentech
  app:

    build:
      context: "./"
      dockerfile: "Dockerfile"
    restart: on-failure
    env_file: ./.env
    ports:
      - 8089:8089
    depends_on:
      - kafka
      - mongodb
      - postgreSQL
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgreSQL:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

volumes:
  db: